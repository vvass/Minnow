{
  "name": "grunt-include-source",
  "description": "Include your sources into your HTML files automatically.",
  "version": "0.3.9",
  "homepage": "https://github.com/jwvdiermen/grunt-include-source",
  "author": {
    "name": "Jan Willem van Diermen",
    "email": "jwvdiermen@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jwvdiermen/grunt-include-source.git"
  },
  "bugs": {
    "url": "https://github.com/jwvdiermen/grunt-include-source/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jwvdiermen/grunt-include-source/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.3.3",
    "grunt": "~0.4.4"
  },
  "peerDependencies": {
    "grunt": "~0.4.4"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "grunt": "~0.4.4",
    "extendr": "~2.1.0"
  },
  "readme": "# grunt-include-source\n\n> Include your sources into your HTML files automatically.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.4`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install --save-dev grunt-include-source\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-include-source');\n```\n\n## The \"includeSource\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `includeSource` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  includeSource: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.basePath\nType: `String`\nDefault value: `''`\n\nThe base path to use when expanding files.\n\n#### options.baseUrl\nType: `String`\nDefault value: `''`\n\nThe base URL to use for included files in the final result.\nFor example, setting `baseUrl` to `public/` will result in files being included from `public/path/to/your/file`.\n\n#### options.templates\nType: `Object`\n\nThe templates for sources included in `html`, `haml`, `jade`, `scss`, `less` files. Definition of single template overrides its default equivalent only.\n\nExample:\n```js\nincludeSource: {\n  options: {\n    basePath: 'app',\n    baseUrl: 'public/',\n    templates: {\n      html: {\n        js: '<script src=\"{filePath}\"></script>',\n        css: '<link rel=\"stylesheet\" type=\"text/css\" href=\"{filePath}\" />',\n      },\n      haml: {\n        js: '%script{src: \"{filePath}\"}/',\n        css: '%link{href: \"{filePath}\", rel: \"stylesheet\"}/'\n      },      \n      jade: {\n        js: 'script(src=\"{filePath}\", type=\"text/javascript\")',    \n        css: 'link(href=\"{filePath}\", rel=\"stylesheet\", type=\"text/css\")'\n      },\n      scss: {\n        scss: '@import \"{filePath}\";',\n        css: '@import \"{filePath}\";',\n      },\n      less: {\n        less: '@import \"{filePath}\";',\n        css: '@import \"{filePath}\";',\n      }\n    }\n  },\n  myTarget: {\n    files: {\n      'dist/index.html': 'app/index.tpl.html'\n    }\n  }\n}\n```\n\nAs it was mentioned above, it is possible to override only necessary templates. \n\n### Include syntax\nCurrently supported: `html`, `haml`, `jade`, `scss` and `less`\n\n#### HTML syntax\n`<!-- include: options_go_here_as_json -->`\n\n#### SCSS and LESS syntax\n`// include: options_go_here_as_json`\n\n#### include.type\nThe type of files that are being included.\nNecessary for choosing the template for output. See `options.templates` for currently supported types.\nSupported types are dependend on the file type you include them from.\n\n#### include.bower\n**DEPRECATED**: Use another Grunt plugin which is better suited for this usecase, like [grunt-bower-install](https://github.com/stephenplusplus/grunt-bower-install).\nThis plugin doesn't support the `main` property for example and is mainly used for development purposes to directly include external sources.\n\nInclude files of the specified Bower component. The component should have a `bower.json` meta data with a property called `sources`.\nThis property should contain the files grouped by type, which are passed through the `grunt.file.expand` method.\n\nExample:\n```js\n{\n  \"name\": \"package.name\",\n  ...\n  \"sources\": {\n    \"js\": [\n      \"src/scripts/**/*.js\",\n      \"lib/compiled-templates.js\"\n    ],\n    \"css\": \"src/styles/**/*.css\"\n  }\n}\n```\n\n#### include.files\nInclude the given files. Files are passed through the `grunt.file.expand` method.\n\n#### include.basePath\nSet to override the `basePath` set in the options.\n\n#### include.baseUrl\nSet to override the `baseUrl` set in the options.\n\n#### include.ordering\nType: `String`\nDefault value: `undefined`\n\nOrdering method to be used when including files. Currently supported methods are:\n* `undefined` (default) - included files are sorted by their paths alphabetically in ascending order.\n* `'top-down'` - files from the parent directory will be included before files from subdirectories.\n  \n### Usage Examples\nConfigure your task like this:\n\n```js\ngrunt.initConfig({\n  includeSource: {\n    options: {\n      basePath: 'app',\n      baseUrl: 'public/'\n    },\n    myTarget: {\n      files: {\n        'dist/index.html': 'app/index.tpl.html'\n      }\n    }\n  }\n})\n```\n\nThe file `index.tpl.html` could contain, for example:\n```html\n<!doctype html>\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title>Index</title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width\">\n\n        <!-- \n          Automatically include Bower components. Use the \"sources\" object in your bower.json\n          to specify which source files are which.\n        -->\n        <!-- include: \"type\": \"css\", \"bower\": \"yourComponent\" -->\n        \n        <!--\n          Include CSS files from a \"tmp\" directory, put there by another task.\n          This shows how to override the default \"basePath\" set in the options.\n        -->\n        <!-- include: \"type\": \"css\", \"basePath\": \"tmp\", \"files\": \"styles/**/*.css\" -->\n    </head>\n    <body>\n        <!-- include: \"type\": \"js\", \"bower\": \"yourComponent\" -->\n        <!-- include: \"type\": \"js\", \"files\": \"scripts/**/*.js\" -->\n    </body>\n</html>\n```\nAnd the resulting file `index.html` will look something like:\n```html\n<!doctype html>\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title>Index</title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width\">\n\n        <!-- \n          Automatically include Bower components. Use the \"sources\" object in your bower.json\n          to specify which source files are which.\n        -->\n        <!-- include: \"type\": \"css\", \"bower\": \"yourComponent\" -->\n        \n        <!--\n          Include CSS files from a \"tmp\" directory, put there by another task.\n          This shows how to override the default \"basePath\" set in the options.\n        -->\n        <link href=\"public/styles/main.css\" rel=\"stylesheet\" type=\"text/css\" />\n        <link href=\"public/styles/anotherFile.css\" rel=\"stylesheet\" type=\"text/css\" />\n    </head>\n    <body>\n        <script src=\"public/bower_components/yourComponent/main.js\"></script>\n        <script src=\"public/scripts/app.js\"></script>\n        <script src=\"public/scripts/anotherFile.js\"></script>\n        <script src=\"public/scripts/controllers/evenMore.js\"></script>\n    </body>\n</html>\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n### 2014-05-04 ver. 0.3.9\n\n* add support for Jade\n* make automatic indentation more intelligent by using EOL from context\n\n### 2014-05-03 ver. 0.3.8\n\n* replace all instances of {filePath} instead of the only the first\n* add {filePathDecoded} to enable use of raw URL which isn't encoded\n\n### 2014-04-27 ver. 0.3.7\n\n* DEPRECATED: Bower support, see readme.\n* support for HAML (see https://github.com/jwvdiermen/grunt-include-source/pull/17)\n* tags generated for HTML now use HTML5 syntax by default.\n* added basic tests\n* updated dependencies.\n\n### 2014-04-18 ver. 0.3.6\n\n* added support for `include.ordering` option. \n* added automated indentation for included entries (see https://github.com/jwvdiermen/grunt-include-source/issues/14)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-include-source@0.3.9",
  "dist": {
    "shasum": "9437ea2ff1c079738d0454a97de5ed204da3618b"
  },
  "_from": "grunt-include-source@",
  "_resolved": "https://registry.npmjs.org/grunt-include-source/-/grunt-include-source-0.3.9.tgz"
}
